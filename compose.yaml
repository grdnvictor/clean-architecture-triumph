services:
  frontend:
    image: node:latest
    container_name: clean_frontend
    restart: always
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - BACKEND_URL=${FRONTEND_URL:-http://localhost:8000}

    working_dir: /app
    volumes:
      - ./infrastructure/platforms/frontend:/app
      - /app/node_modules
      - /app/.next

  server:
    image: denoland/deno:latest
    container_name: clean_server
    restart: always
    environment:
      - PORT=8000
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "8000:8000"
    working_dir: /home/deno/app
    volumes:
      - ./:/home/deno/app
    command: >
      deno run 
      --watch
      --allow-net 
      --allow-read 
      --allow-write 
      --allow-env 
      --env-file=.env
      infrastructure/platforms/deno/index.ts
    depends_on:
      - postgres


  postgres:
    image: postgres:latest
    container_name: clean_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-clean_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-clean_password}
      POSTGRES_DB: ${POSTGRES_DB:-clean_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres

volumes:
  postgres_data:
